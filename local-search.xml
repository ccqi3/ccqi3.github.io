<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>centos7安装MySQL</title>
    <link href="/blog/2021/01/03/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E5%BA%93/centos7%E5%AE%89%E8%A3%85MySQL/"/>
    <url>/blog/2021/01/03/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E5%BA%93/centos7%E5%AE%89%E8%A3%85MySQL/</url>
    
    <content type="html"><![CDATA[<h2 id="centos7安装MySQL"><a href="#centos7安装MySQL" class="headerlink" title="centos7安装MySQL"></a>centos7安装MySQL</h2><ol><li><p>配置YUM源</p><p> <code>wget http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm</code></p><p> <code>yum localinstall mysql57-community-release-el7-8.noarch.rpm</code></p><p> <code>yum repolist enabled | grep &quot;mysql.*-community.*&quot;</code></p><p> 可以修改<code>vim /etc/yum.repos.d/mysql-community.repo</code>源，改变默认安装的mysql版本。比如要安装5.6版本，将5.7源的enabled=1改成enabled=0。然后再将5.6源的enabled=0改成enabled=1即可。</p></li><li><p>安装MySQL</p><p> <code>yum install mysql-community-server</code></p></li><li><p>启动MySQL服务</p><p> <code>service mysqld start</code></p></li><li><p>开机启动</p><p> <code>systemctl enable mysqld</code></p><p> <code>systemctl daemon-reload</code></p></li><li><p>修改root本地登录密码</p><p> <code>grep &#39;temporary password&#39; /var/log/mysqld.log   ---AkY&gt;ts#9)Dcv</code></p><p> <code>mysql -uroot -p</code></p><p> <code>ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;a1b2c3d4&#39;; </code></p><p> 修改密码策略</p><p> 在<code>/etc/my.cnf</code>文件添加validate_password_policy配置，指定密码策略<br>选择0（LOW），1（MEDIUM），2（STRONG）其中一种，选择2需要提供密码字典文件<br>validate_password_policy=0</p><p> 如果不需要密码策略，添加my.cnf文件中添加如下配置禁用即可：<br><code>validate_password = off</code></p></li><li><p>添加远程登录用户</p><p> 默认只允许root帐户在本地登录，如果要在其它机器上连接mysql，必须修改root允许远程连接，或者添加一个允许远程连接的帐户，为了安全起见，我添加一个新的帐户：<br> mysql&gt; <code>GRANT ALL PRIVILEGES ON *.* TO &#39;mysql&#39;@&#39;%&#39; IDENTIFIED BY &#39;mysql123&#39; WITH GRANT OPTION;</code></p><p> 设置root用户远程登录</p><pre><code> use mysql; update user set host = &#39;%&#39; where user = &#39;root&#39;; FLUSH PRIVILEGES;</code></pre></li><li><p>配置默认编码为utf8</p><p> 修改<code>/etc/my.cnf</code>配置文件，在[mysqld]下添加编码配置，如下所示：</p><p> [mysqld]</p><p> character_set_server=utf8</p><p> init_connect=’SET NAMES utf8’</p></li><li><p>不区分大小写</p><p> 在<code>[mysqld]</code>下加上<code>lower_case_table_names=1</code></p></li><li><p>mysql重启服务</p><p> <code>service mysqld restart</code></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>编程笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于gitee+hexo搭建个人博客</title>
    <link href="/blog/2020/12/31/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/hexo/"/>
    <url>/blog/2020/12/31/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/hexo/</url>
    
    <content type="html"><![CDATA[<p>什么是 Hexo？</p><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。  —来自hexo官网<br><code>https://hexo.io/zh-cn/docs/</code></p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul><li>nodejs</li><li>git</li></ul><ol><li><p>安装hexo。 （npm默认镜像源在国外，会有下载失败情况，建议更换taobao镜像源）</p><p> <code>$ npm install -g hexo-cli</code></p></li><li><p>新建个人文件夹，初始化目录为hexo目录。命令如下：</p><pre><code> $ hexo init $ npm install 执行完毕后目录如下： hexo  ├── _config.landscape.yml ├── _config.yml ├── node_modules ├── package-lock.json ├── package.json ├── scaffolds ├── source └── themes</code></pre></li><li><p>启动hexo</p></li></ol><p>在hexo目录下执行 <code>hexo server</code></p><img src="/blog/2020/12/31/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/hexo/hexo%E5%90%AF%E5%8A%A8%E5%9B%BE.png" class><p>浏览器访问<strong><a href="http://localhost:4000/">http://localhost:4000</a></strong> 即可</p><h2 id="gitee网站配置"><a href="#gitee网站配置" class="headerlink" title="gitee网站配置"></a>gitee网站配置</h2><ol><li><p>在gitee新建仓库*<strong>.gitee.io</strong> (*号为任意名称)</p></li><li><p>修改<code>_config.yml</code>文件</p><pre><code> 这里只截取部分配置信息 # URL ## If your site is put in a subdirectory, set url as &#39;http://example.com/child&#39; and root as &#39;/child/&#39; url: 后续需要修改  root: 同目录名  deploy:   type: &#39;git&#39;   repo: git仓库地址   如： https://gitee.com/test/test   branch: master   message: blog update</code></pre></li><li><p>安装插件 <code>npm install --save hexo-deployer-git</code></p></li><li><p>执行命令<code>hexo g -d</code> 这里会提示用户名密码，成功后在gitee页面可以看到本地代码已提交到仓库中。</p><img src="/blog/2020/12/31/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/hexo/gitee-pages.png" class></li><li><p>如图操作后点击启动，成功后复制网站地址，访问发现静态资源没有加载。</p></li></ol><ul><li>将配置文件中的url修改为网站地址 例如： <a href="http://ccqi3.gitee.io/test">http://ccqi3.gitee.io/test</a></li><li>root 后是仓库名称如 root: /test/</li></ul><ol start="6"><li>修改完后在hexo目录下再次执行<code>hexo g -d</code> (以后配置有调整或者发布新的文章都用此命令即可)</li><li>在gitee的pages页面里点击更新，再次访问网址发现已经搭建好博客了。</li></ol><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><ul><li>修改<code>_config.yml</code> 文件中的 <code>post_asset_folder:false</code> 改为 <strong>true</strong><br>这样新建文档时会在文档同级生成同名文件夹，图片资源放入其中。</li><li>安装插件<br><code>npm install https://github.com/7ym0n/hexo-asset-image --save</code></li></ul><p><code>&#123;% asset_img test.jpg This is an test image %&#125;</code><br>test.jpg 就是图片文件名称 后面文字是图片描述</p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p><code>hexo generate</code></p><p><code>hexo server</code></p><p><code>hexo deploy</code></p><p><code>hexo clean</code></p><p><code>hexo new page &quot;type&quot; </code> <strong>type</strong> 如下：</p><table><thead><tr><th>page</th><th>type</th><th>内容</th></tr></thead><tbody><tr><td>tages</td><td>tages</td><td>标签</td></tr><tr><td>categories</td><td>categories</td><td>分类</td></tr><tr><td>archives</td><td>archives</td><td>博客</td></tr><tr><td>about</td><td>about</td><td>关于</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>编程笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具方法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的博客</title>
    <link href="/blog/2020/12/24/%E4%B8%AA%E4%BA%BA%E8%AE%A1%E5%88%92/%E4%B8%AA%E4%BA%BA%E8%AE%A1%E5%88%92/"/>
    <url>/blog/2020/12/24/%E4%B8%AA%E4%BA%BA%E8%AE%A1%E5%88%92/%E4%B8%AA%E4%BA%BA%E8%AE%A1%E5%88%92/</url>
    
    <content type="html"><![CDATA[<h2 id="为什么要写博客"><a href="#为什么要写博客" class="headerlink" title="为什么要写博客"></a>为什么要写博客</h2><ul><li>生活记录</li><li>编程笔记</li></ul>]]></content>
    
    
    <categories>
      
      <category>个人计划</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
